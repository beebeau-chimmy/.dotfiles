"use strict";
'use babel';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const {
  maxAttachmentFileSize
} = require('inkdrop-model');
const ImportMarkdownProgressDialog = ({
  modal,
  tooLargeFiles,
  status,
  importingFilePath,
  importError
}) => {
  const {
    Dialog
  } = inkdrop.components.classes;
  let content = /*#__PURE__*/_react.default.createElement(Dialog.Content, null, /*#__PURE__*/_react.default.createElement("div", null, status));
  if (tooLargeFiles.length > 0) {
    content = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(Dialog.Content, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "ui error message"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "header"
    }, "The following files are too large:"), /*#__PURE__*/_react.default.createElement("p", null, "Files larger than ", maxAttachmentFileSize / 1024 / 1024, " MB cannot be imported. Please remove them to proceed."), /*#__PURE__*/_react.default.createElement("pre", null, tooLargeFiles.map(e => /*#__PURE__*/_react.default.createElement("div", {
      key: e
    }, e))))), /*#__PURE__*/_react.default.createElement(Dialog.Actions, {
      className: "right aligned"
    }, /*#__PURE__*/_react.default.createElement("button", {
      className: "ui button",
      onClick: modal.close
    }, "Close")));
  }
  if (importError) {
    content = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(Dialog.Content, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "ui error message"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "header"
    }, "Failed to import the Markdown file"), /*#__PURE__*/_react.default.createElement("p", null, "An unexpected error happened while processing \"", /*#__PURE__*/_react.default.createElement("code", null, importingFilePath), "\"."), /*#__PURE__*/_react.default.createElement("pre", null, importError.stack))), /*#__PURE__*/_react.default.createElement(Dialog.Actions, {
      className: "right aligned"
    }, /*#__PURE__*/_react.default.createElement("button", {
      className: "ui button",
      onClick: modal.close
    }, "Close")));
  }
  return /*#__PURE__*/_react.default.createElement(Dialog, _extends({}, modal.state, {
    className: "import-markdown-progress-dialog"
  }), content);
};
var _default = ImportMarkdownProgressDialog;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJtYXhBdHRhY2htZW50RmlsZVNpemUiLCJJbXBvcnRNYXJrZG93blByb2dyZXNzRGlhbG9nIiwibW9kYWwiLCJ0b29MYXJnZUZpbGVzIiwic3RhdHVzIiwiaW1wb3J0aW5nRmlsZVBhdGgiLCJpbXBvcnRFcnJvciIsIkRpYWxvZyIsImlua2Ryb3AiLCJjb21wb25lbnRzIiwiY2xhc3NlcyIsImNvbnRlbnQiLCJjcmVhdGVFbGVtZW50IiwiQ29udGVudCIsIkZyYWdtZW50IiwiY2xhc3NOYW1lIiwibWFwIiwiZSIsIkFjdGlvbnMiLCJvbkNsaWNrIiwiY2xvc2UiLCJzdGFjayIsInN0YXRlIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJwcm9ncmVzcy1kaWFsb2cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCdcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuY29uc3QgeyBtYXhBdHRhY2htZW50RmlsZVNpemUgfSA9IHJlcXVpcmUoJ2lua2Ryb3AtbW9kZWwnKVxuXG5jb25zdCBJbXBvcnRNYXJrZG93blByb2dyZXNzRGlhbG9nID0gKHtcbiAgbW9kYWwsXG4gIHRvb0xhcmdlRmlsZXMsXG4gIHN0YXR1cyxcbiAgaW1wb3J0aW5nRmlsZVBhdGgsXG4gIGltcG9ydEVycm9yXG59KSA9PiB7XG4gIGNvbnN0IHsgRGlhbG9nIH0gPSBpbmtkcm9wLmNvbXBvbmVudHMuY2xhc3Nlc1xuXG4gIGxldCBjb250ZW50ID0gKFxuICAgIDxEaWFsb2cuQ29udGVudD5cbiAgICAgIDxkaXY+e3N0YXR1c308L2Rpdj5cbiAgICA8L0RpYWxvZy5Db250ZW50PlxuICApXG5cbiAgaWYgKHRvb0xhcmdlRmlsZXMubGVuZ3RoID4gMCkge1xuICAgIGNvbnRlbnQgPSAoXG4gICAgICA8PlxuICAgICAgICA8RGlhbG9nLkNvbnRlbnQ+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1aSBlcnJvciBtZXNzYWdlXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRlclwiPlRoZSBmb2xsb3dpbmcgZmlsZXMgYXJlIHRvbyBsYXJnZTo8L2Rpdj5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICBGaWxlcyBsYXJnZXIgdGhhbiB7bWF4QXR0YWNobWVudEZpbGVTaXplIC8gMTAyNCAvIDEwMjR9IE1CIGNhbm5vdFxuICAgICAgICAgICAgICBiZSBpbXBvcnRlZC4gUGxlYXNlIHJlbW92ZSB0aGVtIHRvIHByb2NlZWQuXG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8cHJlPlxuICAgICAgICAgICAgICB7dG9vTGFyZ2VGaWxlcy5tYXAoZSA9PiAoXG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9e2V9PntlfTwvZGl2PlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvcHJlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0RpYWxvZy5Db250ZW50PlxuICAgICAgICA8RGlhbG9nLkFjdGlvbnMgY2xhc3NOYW1lPVwicmlnaHQgYWxpZ25lZFwiPlxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwidWkgYnV0dG9uXCIgb25DbGljaz17bW9kYWwuY2xvc2V9PlxuICAgICAgICAgICAgQ2xvc2VcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9EaWFsb2cuQWN0aW9ucz5cbiAgICAgIDwvPlxuICAgIClcbiAgfVxuXG4gIGlmIChpbXBvcnRFcnJvcikge1xuICAgIGNvbnRlbnQgPSAoXG4gICAgICA8PlxuICAgICAgICA8RGlhbG9nLkNvbnRlbnQ+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1aSBlcnJvciBtZXNzYWdlXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRlclwiPkZhaWxlZCB0byBpbXBvcnQgdGhlIE1hcmtkb3duIGZpbGU8L2Rpdj5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICBBbiB1bmV4cGVjdGVkIGVycm9yIGhhcHBlbmVkIHdoaWxlIHByb2Nlc3NpbmcgJnF1b3Q7XG4gICAgICAgICAgICAgIDxjb2RlPntpbXBvcnRpbmdGaWxlUGF0aH08L2NvZGU+JnF1b3Q7LlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgPHByZT57aW1wb3J0RXJyb3Iuc3RhY2t9PC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvRGlhbG9nLkNvbnRlbnQ+XG4gICAgICAgIDxEaWFsb2cuQWN0aW9ucyBjbGFzc05hbWU9XCJyaWdodCBhbGlnbmVkXCI+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJ1aSBidXR0b25cIiBvbkNsaWNrPXttb2RhbC5jbG9zZX0+XG4gICAgICAgICAgICBDbG9zZVxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L0RpYWxvZy5BY3Rpb25zPlxuICAgICAgPC8+XG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8RGlhbG9nIHsuLi5tb2RhbC5zdGF0ZX0gY2xhc3NOYW1lPVwiaW1wb3J0LW1hcmtkb3duLXByb2dyZXNzLWRpYWxvZ1wiPlxuICAgICAge2NvbnRlbnR9XG4gICAgPC9EaWFsb2c+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgSW1wb3J0TWFya2Rvd25Qcm9ncmVzc0RpYWxvZ1xuIl0sIm1hcHBpbmdzIjoiO0FBQUEsV0FBVzs7QUFBQUEsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsS0FBQTtBQUFBO0FBQUFELE9BQUEsQ0FBQUUsT0FB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