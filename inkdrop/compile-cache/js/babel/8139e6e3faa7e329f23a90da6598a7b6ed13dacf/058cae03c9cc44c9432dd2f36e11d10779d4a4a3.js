"use strict";
'use babel';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
class BacklinksDisplay extends _react.default.Component {
  state = {
    id: '',
    backlinks: []
  };
  componentWillMount = () => {
    this.updateList();
  };
  componentDidUpdate = () => {
    this.updateList();
  };
  updateList = async () => {
    if (this.state.id === inkdrop.store.getState().editingNote._id) {
      return;
    }
    const noteId = inkdrop.store.getState().editingNote._id;
    const noteLink = `inkdrop://note/${noteId.split(':').pop()}`;
    const db = inkdrop.main.dataStore.getLocalDB();
    const results = await db.utils.search(noteLink);
    const backlinkItems = results.docs.map(doc => {
      return {
        id: doc._id,
        title: doc.title
      };
    });
    this.setState({
      id: noteId,
      backlinks: backlinkItems
    });
  };
  render = () => {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "editor-drawer-separator"
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "editor-drawer-section-header"
    }, "Backlinks"), this.state.backlinks.map(backlink => {
      return this.backlinkitem(backlink);
    }));
  };
  backlinkitem = backlink => {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "editor-drawer-item  clickable"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "icon-container"
    }, /*#__PURE__*/_react.default.createElement("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 24 24",
      width: "1em",
      height: "1em",
      name: "hyperlink-2",
      className: "svg-icon streamline hyperlink-2"
    }, /*#__PURE__*/_react.default.createElement("path", {
      d: "m6.75 17.249 10.5-10.5M7.735 12.021a4.472 4.472 0 0 0-3.417 1.3l-2.25 2.25a4.5 4.5 0 0 0 6.364 6.364l2.25-2.25a4.472 4.472 0 0 0 1.3-3.417M16.265 11.976a4.473 4.473 0 0 0 3.417-1.3l2.25-2.25a4.5 4.5 0 0 0-6.364-6.364l-2.25 2.25a4.475 4.475 0 0 0-1.295 3.417",
      className: "hyperlink-2_svg__a"
    }))), /*#__PURE__*/_react.default.createElement("div", {
      className: "caption",
      onClick: () => {
        inkdrop.commands.dispatch(document.body, 'core:open-note', {
          noteId: backlink.id
        });
      }
    }, backlink.title));
  };
}
exports.default = BacklinksDisplay;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJCYWNrbGlua3NEaXNwbGF5IiwiUmVhY3QiLCJDb21wb25lbnQiLCJzdGF0ZSIsImlkIiwiYmFja2xpbmtzIiwiY29tcG9uZW50V2lsbE1vdW50IiwidXBkYXRlTGlzdCIsImNvbXBvbmVudERpZFVwZGF0ZSIsImlua2Ryb3AiLCJzdG9yZSIsImdldFN0YXRlIiwiZWRpdGluZ05vdGUiLCJfaWQiLCJub3RlSWQiLCJub3RlTGluayIsInNwbGl0IiwicG9wIiwiZGIiLCJtYWluIiwiZGF0YVN0b3JlIiwiZ2V0TG9jYWxEQiIsInJlc3VsdHMiLCJ1dGlscyIsInNlYXJjaCIsImJhY2tsaW5rSXRlbXMiLCJkb2NzIiwibWFwIiwiZG9jIiwidGl0bGUiLCJzZXRTdGF0ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJGcmFnbWVudCIsImNsYXNzTmFtZSIsImJhY2tsaW5rIiwiYmFja2xpbmtpdGVtIiwieG1sbnMiLCJ2aWV3Qm94Iiwid2lkdGgiLCJoZWlnaHQiLCJuYW1lIiwiZCIsIm9uQ2xpY2siLCJjb21tYW5kcyIsImRpc3BhdGNoIiwiZG9jdW1lbnQiLCJib2R5Il0sInNvdXJjZXMiOlsiZGlzcGxheS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYWNrbGlua3NEaXNwbGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0ZSA9IHsgaWQ6ICcnLCBiYWNrbGlua3M6IFtdIH07XG4gICAgY29tcG9uZW50V2lsbE1vdW50ID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnVwZGF0ZUxpc3QoKTtcbiAgICB9O1xuICAgIGNvbXBvbmVudERpZFVwZGF0ZSA9ICgpID0+IHtcbiAgICAgICAgdGhpcy51cGRhdGVMaXN0KCk7XG4gICAgfTtcbiAgICB1cGRhdGVMaXN0ID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5pZCA9PT0gaW5rZHJvcC5zdG9yZS5nZXRTdGF0ZSgpLmVkaXRpbmdOb3RlLl9pZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG5vdGVJZCA9IGlua2Ryb3Auc3RvcmUuZ2V0U3RhdGUoKS5lZGl0aW5nTm90ZS5faWQ7XG4gICAgICAgIGNvbnN0IG5vdGVMaW5rID0gYGlua2Ryb3A6Ly9ub3RlLyR7bm90ZUlkLnNwbGl0KCc6JykucG9wKCl9YDtcbiAgICAgICAgY29uc3QgZGIgPSBpbmtkcm9wLm1haW4uZGF0YVN0b3JlLmdldExvY2FsREIoKTtcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IGRiLnV0aWxzLnNlYXJjaChub3RlTGluayk7XG4gICAgICAgIGNvbnN0IGJhY2tsaW5rSXRlbXMgPSByZXN1bHRzLmRvY3MubWFwKChkb2MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7IGlkOiBkb2MuX2lkLCB0aXRsZTogZG9jLnRpdGxlIH07XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgaWQ6IG5vdGVJZCwgYmFja2xpbmtzOiBiYWNrbGlua0l0ZW1zIH0pO1xuICAgIH07XG4gICAgcmVuZGVyID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImVkaXRvci1kcmF3ZXItc2VwYXJhdG9yXCIgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImVkaXRvci1kcmF3ZXItc2VjdGlvbi1oZWFkZXJcIiB9LCBcIkJhY2tsaW5rc1wiKSxcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuYmFja2xpbmtzLm1hcCgoYmFja2xpbmspID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5iYWNrbGlua2l0ZW0oYmFja2xpbmspO1xuICAgICAgICAgICAgfSkpKTtcbiAgICB9O1xuICAgIGJhY2tsaW5raXRlbSA9IChiYWNrbGluaykgPT4ge1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiZWRpdG9yLWRyYXdlci1pdGVtICBjbGlja2FibGVcIiB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJpY29uLWNvbnRhaW5lclwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInN2Z1wiLCB7IHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIHZpZXdCb3g6IFwiMCAwIDI0IDI0XCIsIHdpZHRoOiBcIjFlbVwiLCBoZWlnaHQ6IFwiMWVtXCIsIG5hbWU6IFwiaHlwZXJsaW5rLTJcIiwgY2xhc3NOYW1lOiBcInN2Zy1pY29uIHN0cmVhbWxpbmUgaHlwZXJsaW5rLTJcIiB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7IGQ6IFwibTYuNzUgMTcuMjQ5IDEwLjUtMTAuNU03LjczNSAxMi4wMjFhNC40NzIgNC40NzIgMCAwIDAtMy40MTcgMS4zbC0yLjI1IDIuMjVhNC41IDQuNSAwIDAgMCA2LjM2NCA2LjM2NGwyLjI1LTIuMjVhNC40NzIgNC40NzIgMCAwIDAgMS4zLTMuNDE3TTE2LjI2NSAxMS45NzZhNC40NzMgNC40NzMgMCAwIDAgMy40MTctMS4zbDIuMjUtMi4yNWE0LjUgNC41IDAgMCAwLTYuMzY0LTYuMzY0bC0yLjI1IDIuMjVhNC40NzUgNC40NzUgMCAwIDAtMS4yOTUgMy40MTdcIiwgY2xhc3NOYW1lOiBcImh5cGVybGluay0yX3N2Z19fYVwiIH0pKSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImNhcHRpb25cIiwgb25DbGljazogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpbmtkcm9wLmNvbW1hbmRzLmRpc3BhdGNoKGRvY3VtZW50LmJvZHksICdjb3JlOm9wZW4tbm90ZScsIHsgbm90ZUlkOiBiYWNrbGluay5pZCB9KTtcbiAgICAgICAgICAgICAgICB9IH0sIGJhY2tsaW5rLnRpdGxlKSkpO1xuICAgIH07XG59XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxXQUFXOztBQUFDQSxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxLQUFBO0FBQUE7QUFBQUQsT0FBQSxDQUFBRSxPQUFBO0FBQ1osSUFBQUMsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQTBCLFNBQUFELHVCQUFBRSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUosT0FBQSxFQUFBSSxHQUFBO0FBQ1gsTUFBTUUsZ0JBQWdCLFNBQVNDLGNBQUssQ0FBQ0MsU0FBUyxDQUFDO0VBQzFEQyxLQUFLLEdBQUc7SUFBRUMsRUFBRSxFQUFFLEVBQUU7SUFBRUMsU0FBUyxFQUFFO0VBQUcsQ0FBQztFQUNqQ0Msa0JBQWtCLEdBQUdBLENBQUEsS0FBTTtJQUN2QixJQUFJLENBQUNDLFVBQVUsQ0FBQyxDQUFDO0VBQ3JCLENBQUM7RUFDREMsa0JBQWtCLEdBQUdBLENBQUEsS0FBTTtJQUN2QixJQUFJLENBQUNELFVBQVUsQ0FBQyxDQUFDO0VBQ3JCLENBQUM7RUFDREEsVUFBVSxHQUFHLE1BQUFBLENBQUEsS0FBWTtJQUNyQixJQUFJLElBQUksQ0FBQ0osS0FBSyxDQUFDQyxFQUFFLEtBQUtLLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDQyxRQUFRLENBQUMsQ0FBQyxDQUFDQyxXQUFXLENBQUND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