"use strict";
'use babel';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const ImportMarkdownSelectNotebookDialog = ({
  modal,
  onSelect
}) => {
  const {
    NotebookListBar
  } = inkdrop.components.classes;
  const {
    Dialog
  } = inkdrop.components.classes;
  return /*#__PURE__*/_react.default.createElement(Dialog, _extends({}, modal.state, {
    onBackdropClick: modal.close,
    className: "import-markdown-select-notebook-dialog"
  }), /*#__PURE__*/_react.default.createElement(Dialog.Title, null, "Import Notes from Markdown"), /*#__PURE__*/_react.default.createElement(Dialog.Content, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "ui message"
  }, "Please select a notebook"), /*#__PURE__*/_react.default.createElement("div", {
    className: "ui form"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "field"
  }, /*#__PURE__*/_react.default.createElement(NotebookListBar, {
    showRoot: true,
    onItemSelect: onSelect
  })))), /*#__PURE__*/_react.default.createElement(Dialog.Actions, {
    className: "right aligned"
  }, /*#__PURE__*/_react.default.createElement("button", {
    className: "ui button",
    onClick: modal.close
  }, "Cancel")));
};
var _default = ImportMarkdownSelectNotebookDialog;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJJbXBvcnRNYXJrZG93blNlbGVjdE5vdGVib29rRGlhbG9nIiwibW9kYWwiLCJvblNlbGVjdCIsIk5vdGVib29rTGlzdEJhciIsImlua2Ryb3AiLCJjb21wb25lbnRzIiwiY2xhc3NlcyIsIkRpYWxvZyIsImNyZWF0ZUVsZW1lbnQiLCJzdGF0ZSIsIm9uQmFja2Ryb3BDbGljayIsImNsb3NlIiwiY2xhc3NOYW1lIiwiVGl0bGUiLCJDb250ZW50Iiwic2hvd1Jvb3QiLCJvbkl0ZW1TZWxlY3QiLCJBY3Rpb25zIiwib25DbGljayIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsic2VsZWN0LWJvb2stZGlhbG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuY29uc3QgSW1wb3J0TWFya2Rvd25TZWxlY3ROb3RlYm9va0RpYWxvZyA9ICh7IG1vZGFsLCBvblNlbGVjdCB9KSA9PiB7XG4gIGNvbnN0IHsgTm90ZWJvb2tMaXN0QmFyIH0gPSBpbmtkcm9wLmNvbXBvbmVudHMuY2xhc3Nlc1xuICBjb25zdCB7IERpYWxvZyB9ID0gaW5rZHJvcC5jb21wb25lbnRzLmNsYXNzZXNcblxuICByZXR1cm4gKFxuICAgIDxEaWFsb2dcbiAgICAgIHsuLi5tb2RhbC5zdGF0ZX1cbiAgICAgIG9uQmFja2Ryb3BDbGljaz17bW9kYWwuY2xvc2V9XG4gICAgICBjbGFzc05hbWU9XCJpbXBvcnQtbWFya2Rvd24tc2VsZWN0LW5vdGVib29rLWRpYWxvZ1wiXG4gICAgPlxuICAgICAgPERpYWxvZy5UaXRsZT5JbXBvcnQgTm90ZXMgZnJvbSBNYXJrZG93bjwvRGlhbG9nLlRpdGxlPlxuICAgICAgPERpYWxvZy5Db250ZW50PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVpIG1lc3NhZ2VcIj5QbGVhc2Ugc2VsZWN0IGEgbm90ZWJvb2s8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1aSBmb3JtXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWVsZFwiPlxuICAgICAgICAgICAgPE5vdGVib29rTGlzdEJhciBzaG93Um9vdCBvbkl0ZW1TZWxlY3Q9e29uU2VsZWN0fSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvRGlhbG9nLkNvbnRlbnQ+XG4gICAgICA8RGlhbG9nLkFjdGlvbnMgY2xhc3NOYW1lPVwicmlnaHQgYWxpZ25lZFwiPlxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInVpIGJ1dHRvblwiIG9uQ2xpY2s9e21vZGFsLmNsb3NlfT5cbiAgICAgICAgICBDYW5jZWxcbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L0RpYWxvZy5BY3Rpb25zPlxuICAgIDwvRGlhbG9nPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEltcG9ydE1hcmtkb3duU2VsZWN0Tm90ZWJvb2tEaWFsb2dcbiJdLCJtYXBwaW5ncyI6IjtBQUFBLFdBQVc7O0FBQUFBLE1BQUEsQ0FBQUMsY0FBQSxDQUFBQyxPQUFBO0VBQUFDLEtBQUE7QUFBQTtBQUFBRCxPQUFBLENBQUFFLE9BQUE7QUFFWCxJQUFBQyxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBeUIsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBSixPQUFBLEVBQUFJLEdBQUE7QUFBQSxTQUFBRSxTQUFBLElBQUFBLFFBQUEsR0FBQVYsTUFBQSxDQUFBVyxNQUFBLEdBQUFYLE1BQUEsQ0FBQVcsTUFBQSxDQUFBQyxJQUFBLGVBQUFDLE1BQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQUFBRixDQUFBLFVBQUFHLE1BQUEsR0FBQUYsU0FBQSxDQUFBRCxDQUFBLFlBQUFJLEdBQUEsSUFBQUQsTUFBQSxRQUFBakIsTUFBQSxDQUFBbUIsU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQUosTUFBQSxFQUFBQyxHQUFBLEtBQUFMLE1BQUEsQ0FBQUssR0FBQSxJQUFBRCxNQUFBLENBQUFDLEdBQUEsZ0JBQUFMLE1BQUEsWUFBQUgsUUFBQSxDQUFBWSxLQUFBLE9BQUFQLFNBQUE7QUFFekIsTUFBTVEsa0NBQWtDLEdBQUdBLENBQUM7RUFBRUMsS0FBSztFQUFFQztBQUFTLENBQUMsS0FBSztFQUNsRSxNQUFNO0lBQUVDO0VBQWdCLENBQUMsR0FBR0MsT0FBTyxDQUFDQyxVQUFVLENBQUNDLE9BQU87RUFDdEQsTUFBTTtJQUFFQztFQUFPLENBQUMsR0FBR0gsT0FBTyxDQUFDQyxVQUFVLENBQUNDLE9BQU87RUFFN0Msb0JBQ0V4QixNQUFBLENBQUFELE9BQUEsQ0FBQTJCLGFBQUEsQ0FBQ0QsTUFBTSxFQUFBcEIsUUFBQSxLQUNEYyxLQUFLLENBQUNRLEtBQUs7SUFDZkMsZUFBZSxFQUFFVCxLQUFLLENBQUNVLEtBQU07SUFDN0JDLFNBQVMsRUFBQztFQUF3QyxpQkFFbEQ5QixNQUFBLENBQUFELE9BQUEsQ0FBQTJCLGFBQUEsQ0FBQ0QsTUFBTSxDQUFDTSxLQUFLLFFBQUMsNEJBQXdDLENBQUMsZUFDdkQvQixNQUFBLENBQUFELE9BQUEsQ0FBQTJCLGFBQUEsQ0FBQ0QsTUFBTSxDQUFDTyxPQUFPLHFCQUNiaEMsTUFBQSxDQUFBRCxPQUFBLENBQUEyQixhQUFBO0lBQUtJLFNBQVMsRUFBQztFQUFZLEdBQUMsMEJBQTZCLENBQUMsZUFDMUQ5QixNQUFBLENBQUFELE9BQUEsQ0FBQTJCLGFBQUE7SUFBS0ksU0FBUyxFQUFDO0VBQVMsZ0JBQ3RCOUIsTUFBQSxDQUFBRCxPQUFBLENBQUEyQixhQUFBO0lBQUtJLFNBQVMsRUFBQztFQUFPLGdCQUNwQjlCLE1BQUEsQ0FBQUQsT0FBQSxDQUFBMkIsYUFBQSxDQUFDTCxlQUFlO0lBQUNZLFFBQVE7SUFBQ0MsWUFBWSxFQUFFZDtFQUFTLENBQUUsQ0FDaEQsQ0FDRixDQUNTLENBQUMsZUFDakJwQixNQUFBLENBQUFELE9BQUEsQ0FBQTJCLGFBQUEsQ0FBQ0QsTUFBTSxDQUFDVSxPQUFPO0lBQUNMLFNBQVMsRUFBQztFQUFlLGdCQUN2QzlCLE1BQUEsQ0FBQUQsT0FBQSxDQUFBMkIsYUFBQTtJQUFRSSxTQUFTLEVBQUMsV0FBVztJQUFDTSxPQUFPLEVBQUVqQixLQUFLLENBQUNVO0VBQU0sR0FBQyxRQUU1QyxDQUNNLENBQ1YsQ0FBQztBQUViLENBQUM7QUFBQSxJQUFBUSxRQUFBLEdBRWNuQixrQ0FBa0M7QUFBQXJCLE9BQUEsQ0FBQUUsT0FBQSxHQUFBc0MsUUFBQSJ9