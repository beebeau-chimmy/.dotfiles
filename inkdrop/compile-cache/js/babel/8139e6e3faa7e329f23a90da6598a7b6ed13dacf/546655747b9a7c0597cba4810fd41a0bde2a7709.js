"use strict";
'use babel';

class CenterEditor {
  wasActive = false;
  cancelToken = null;
  sidebar = false;
  distractionFree = false;
  config = {
    updateInterval: {
      title: 'Check for a state change every X seconds',
      type: 'number',
      default: 1.0,
      minimum: 0.1
    }
  };
  listenForLayoutChanges(target) {
    const {
      mainLayout
    } = inkdrop.store.getState();
    if (target.sidebar !== mainLayout.sidebarVisible || target.distractionFree !== mainLayout.distractionFreeEnabled) {
      target.sidebar = mainLayout.sidebarVisible;
      target.distractionFree = mainLayout.distractionFreeEnabled;
      target.updateState();
    }
  }
  updateState() {
    const {
      layouts
    } = inkdrop;
    const {
      mainLayout
    } = inkdrop.store.getState();
    if (mainLayout.distractionFreeEnabled) {
      this.distractionFree = mainLayout.distractionFreeEnabled;
      return;
    }
    const target = mainLayout.sidebarVisible ? 'main:full' : 'main:slim';
    this.sidebar = mainLayout.sidebarVisible;
    layouts.removeComponentFromLayout(target, 'EditorLayout');
    layouts.insertComponentToLayoutBefore(target, 'NoteListBarLayout', 'EditorLayout');
  }
  activate() {
    if (this.cancelToken) {
      return;
    }
    this.updateState();
    this.wasActive = true;
    this.cancelToken = setInterval(() => this.listenForLayoutChanges(this), 1000);
  }
  deactivate() {
    if (this.cancelToken) {
      clearInterval(this.cancelToken);
      this.cancelToken = null;
    }
    if (this.wasActive) {
      this.wasActive = false;
      const {
        layouts
      } = inkdrop;
      const {
        mainLayout
      } = inkdrop.store.getState();
      layouts.removeComponentFromLayout('main:full', 'EditorLayout');
      layouts.insertComponentToLayoutAfter('main:full', 'NoteListBarLayout', 'EditorLayout');
      layouts.removeComponentFromLayout('main:slim', 'EditorLayout');
      layouts.insertComponentToLayoutAfter('main:slim', 'NoteListBarLayout', 'EditorLayout');
    }
  }
  swapPanels(panels) {
    this.swapNodes(panels[0].element, panels[1].element);
  }
}
module.exports = new CenterEditor();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDZW50ZXJFZGl0b3IiLCJ3YXNBY3RpdmUiLCJjYW5jZWxUb2tlbiIsInNpZGViYXIiLCJkaXN0cmFjdGlvbkZyZWUiLCJjb25maWciLCJ1cGRhdGVJbnRlcnZhbCIsInRpdGxlIiwidHlwZSIsImRlZmF1bHQiLCJtaW5pbXVtIiwibGlzdGVuRm9yTGF5b3V0Q2hhbmdlcyIsInRhcmdldCIsIm1haW5MYXlvdXQiLCJpbmtkcm9wIiwic3RvcmUiLCJnZXRTdGF0ZSIsInNpZGViYXJWaXNpYmxlIiwiZGlzdHJhY3Rpb25GcmVlRW5hYmxlZCIsInVwZGF0ZVN0YXRlIiwibGF5b3V0cyIsInJlbW92ZUNvbXBvbmVudEZyb21MYXlvdXQiLCJpbnNlcnRDb21wb25lbnRUb0xheW91dEJlZm9yZSIsImFjdGl2YXRlIiwic2V0SW50ZXJ2YWwiLCJkZWFjdGl2YXRlIiwiY2xlYXJJbnRlcnZhbCIsImluc2VydENvbXBvbmVudFRvTGF5b3V0QWZ0ZXIiLCJzd2FwUGFuZWxzIiwicGFuZWxzIiwic3dhcE5vZGVzIiwiZWxlbWVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJjZW50ZXItZWRpdG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuXG5jbGFzcyBDZW50ZXJFZGl0b3Ige1xuICB3YXNBY3RpdmUgPSBmYWxzZTtcbiAgY2FuY2VsVG9rZW4gPSBudWxsO1xuICBzaWRlYmFyID0gZmFsc2U7XG4gIGRpc3RyYWN0aW9uRnJlZSA9IGZhbHNlO1xuXG4gIGNvbmZpZyA9IHtcbiAgICB1cGRhdGVJbnRlcnZhbDoge1xuICAgICAgdGl0bGU6ICdDaGVjayBmb3IgYSBzdGF0ZSBjaGFuZ2UgZXZlcnkgWCBzZWNvbmRzJyxcbiAgICAgIHR5cGU6ICdudW1iZXInLFxuICAgICAgZGVmYXVsdDogMS4wLFxuICAgICAgbWluaW11bTogMC4xXG4gICAgfVxuICB9XG5cbiAgbGlzdGVuRm9yTGF5b3V0Q2hhbmdlcyh0YXJnZXQpIHtcbiAgICBjb25zdCB7IG1haW5MYXlvdXQgfSA9IGlua2Ryb3Auc3RvcmUuZ2V0U3RhdGUoKVxuXG4gICAgaWYgKHRhcmdldC5zaWRlYmFyICE9PSBtYWluTGF5b3V0LnNpZGViYXJWaXNpYmxlIHx8IHRhcmdldC5kaXN0cmFjdGlvbkZyZWUgIT09IG1haW5MYXlvdXQuZGlzdHJhY3Rpb25GcmVlRW5hYmxlZCkge1xuICAgICAgdGFyZ2V0LnNpZGViYXIgPSBtYWluTGF5b3V0LnNpZGViYXJWaXNpYmxlO1xuICAgICAgdGFyZ2V0LmRpc3RyYWN0aW9uRnJlZSA9IG1haW5MYXlvdXQuZGlzdHJhY3Rpb25GcmVlRW5hYmxlZDtcblxuICAgICAgdGFyZ2V0LnVwZGF0ZVN0YXRlKCk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlU3RhdGUoKSB7XG4gICAgY29uc3QgeyBsYXlvdXRzIH0gPSBpbmtkcm9wXG4gICAgY29uc3QgeyBtYWluTGF5b3V0IH0gPSBpbmtkcm9wLnN0b3JlLmdldFN0YXRlKClcblxuICAgIGlmIChtYWluTGF5b3V0LmRpc3RyYWN0aW9uRnJlZUVuYWJsZWQpIHtcbiAgICAgIHRoaXMuZGlzdHJhY3Rpb25GcmVlID0gbWFpbkxheW91dC5kaXN0cmFjdGlvbkZyZWVFbmFibGVkO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHRhcmdldCA9IG1haW5MYXlvdXQuc2lkZWJhclZpc2libGUgPyAnbWFpbjpmdWxsJyA6ICdtYWluOnNsaW0nXG5cbiAgICB0aGlzLnNpZGViYXIgPSBtYWluTGF5b3V0LnNpZGViYXJWaXNpYmxlO1xuXG4gICAgbGF5b3V0cy5yZW1vdmVDb21wb25lbnRGcm9tTGF5b3V0KHRhcmdldCwgJ0VkaXRvckxheW91dCcpXG4gICAgbGF5b3V0cy5pbnNlcnRDb21wb25lbnRUb0xheW91dEJlZm9yZSh0YXJnZXQsICdOb3RlTGlzdEJhckxheW91dCcsICdFZGl0b3JMYXlvdXQnKVxuICB9XG5cbiAgYWN0aXZhdGUoKSB7XG4gICAgaWYgKHRoaXMuY2FuY2VsVG9rZW4pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZVN0YXRlKCk7XG5cbiAgICB0aGlzLndhc0FjdGl2ZSA9IHRydWU7XG4gICAgdGhpcy5jYW5jZWxUb2tlbiA9IHNldEludGVydmFsKCgpID0+IHRoaXMubGlzdGVuRm9yTGF5b3V0Q2hhbmdlcyh0aGlzKSwgMTAwMCk7XG4gIH1cblxuICBkZWFjdGl2YXRlKCkge1xuICAgIGlmICh0aGlzLmNhbmNlbFRva2VuKSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuY2FuY2VsVG9rZW4pO1xuICAgICAgdGhpcy5jYW5jZWxUb2tlbiA9IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMud2FzQWN0aXZlKSB7XG4gICAgICB0aGlzLndhc0FjdGl2ZSA9IGZhbHNlO1xuXG4gICAgICBjb25zdCB7IGxheW91dHMgfSA9IGlua2Ryb3BcbiAgICAgIGNvbnN0IHsgbWFpbkxheW91dCB9ID0gaW5rZHJvcC5zdG9yZS5nZXRTdGF0ZSgpXG4gICAgICBcbiAgICAgIGxheW91dHMucmVtb3ZlQ29tcG9uZW50RnJvbUxheW91dCgnbWFpbjpmdWxsJywgJ0VkaXRvckxheW91dCcpXG4gICAgICBsYXlvdXRzLmluc2VydENvbXBvbmVudFRvTGF5b3V0QWZ0ZXIoJ21haW46ZnVsbCcsICdOb3RlTGlzdEJhckxheW91dCcsICdFZGl0b3JMYXlvdXQnKVxuXG4gICAgICBsYXlvdXRzLnJlbW92ZUNvbXBvbmVudEZyb21MYXlvdXQoJ21haW46c2xpbScsICdFZGl0b3JMYXlvdXQnKVxuICAgICAgbGF5b3V0cy5pbnNlcnRDb21wb25lbnRUb0xheW91dEFmdGVyKCdtYWluOnNsaW0nLCAnTm90ZUxpc3RCYXJMYXlvdXQnLCAnRWRpdG9yTGF5b3V0JylcbiAgICB9XG4gIH1cblxuICBzd2FwUGFuZWxzKHBhbmVscykge1xuICAgIHRoaXMuc3dhcE5vZGVzKHBhbmVsc1swXS5lbGVtZW50LCBwYW5lbHNbMV0uZWxlbWVudClcbiAgfVxufVxuXG5tb2R1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